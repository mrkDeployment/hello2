{"version":3,"sources":["logo.svg","functions/commonfunctions.js","functions/strategies.js","component/PriceList.js","App.js","reportWebVitals.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","SL","symbol","amount","token","live_price","a","SLPercent","window","localStorage","getItem","Buying_Price","sell_data","type","execution","srcCurrency","dstCurrency","String","config","headers","Authorization","axios","post","then","response","console","log","catch","error","Candle","interval","limit","changed_percent","get","data","List","props","handleChange","e","setState","target","name","value","handleClickButton","setItem","state","handleTest","clearInterval","start_bot","handleMax","buy_sum","sell_sum","SL_sum","coin_list","coins_data","currencies","wallets","forEach","coin","rialBalance","currency","balance","coin_name","coin_balance","Number","parseFloat","this","setInterval","refresh","location","reload","audio","Audio","tether","bids","nobitex_coin_list","binance_coin_list","i","j","price_sum_bid","price_sum_ask","percentage","quantity","balance_rls","k","price_bid","asks","price_ask","price","buyPercent","candle","now","Date","play","allowed_price","NobitexToken","buy_data","undefined","coin_balance_name","sellPercent","sleep_time","length","className","placeholder","onChange","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a01f1b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const sleep = (ms) => {\n\treturn new Promise(resolve => setTimeout(resolve, ms));\n}","import axios from 'axios'\n\n\nexport const SL = async (symbol,amount,token,live_price) => {\n\n\tlet SLPercent=window.localStorage.getItem('SLPercent')*0.01\n\tlet Buying_Price=window.localStorage.getItem(symbol)\n\n\tif (live_price< Buying_Price*(1-SLPercent)){\n\t\tlet sell_data = {\n\t\t\ttype: \"sell\",\n\t\t\texecution: \"market\",\n\t\t\tsrcCurrency: symbol,\n\t\t\tdstCurrency: \"rls\",\n\t\t\tamount: String(amount),\n\t\t}\n\t\tlet config = {\n\t\t\theaders: { Authorization: `token ${token}` }\n\t\t};\n\t\tif (amount>0){\n\t\t\tawait axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/market/orders/add', sell_data,config)\n\t\t\t.then((response) => {\n\t\t\t  console.log('Stophhhhhhhhhhhhhhhhhhh Loss',response)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t  console.error('erotttttttttttttttttt',error)\n\t\t\t})\n\t\t}\n\t}\t\n}\n\n\nexport const Candle = async (symbol,interval='30m',limit='6') => {\n\n\tlet changed_percent=0\n\n\tawait axios.get(\"https://api.binance.com/api/v3/klines?interval=\"+interval+\"&limit=\"+limit+\"&symbol=\"+symbol, {} )\n\t.then(response => {\n\t\tconsole.log('ddddddd',response.data[0][1])\n\t\tchanged_percent= (response.data[limit-1][4]-response.data[0][1])/response.data[0][1]*100\n\t})\n\t.catch(error => {\n\t\tconsole.error(error);\n\t\tchanged_percent=0;\n\t});\n\treturn changed_percent\n}\n\n","import React from 'react';\nimport '../App.css';\nimport axios from 'axios'\nimport {sleep} from '../functions/commonfunctions'\nimport {SL,Candle} from '../functions/strategies'\nimport {Balance} from '../functions/Balance'\n\nclass List extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      buy_sum: 0,\n      sell_sum: 0,\n      SL_sum: 0\n    }\n  }\n\n  async componentDidMount () {\n    \n    let token=window.localStorage.getItem('NobitexToken')\n    var coin_list={}\n\n    let config = {\n      headers: { Authorization: `token ${token}` }\n    };\n    \n    let coins_data = {\n      currencies:\"rls,btc,shib,ltc,eth,xlm,trx,doge,etc,bnb,eos,xrp,uni,link,dot,aave,ada\"\n    }\n\n    await axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/users/wallets/list', coins_data, config)\n    .then((response) => {\n      \n      var coins= response.data.wallets\n      coins.forEach(function (coin) {\n              \n        if ( coin.rialBalance > 100000 ){\n          let currency= coin.currency\n          let balance= coin.balance\n          coin_list[currency]= balance\n        }\n      });\n      \n    })\n    .catch((error) => {\n      console.error('erroppppppp',error)\n    })\n    \n    for (var coin in coin_list){\n      let coin_name= 'balance_'+ coin\n      let coin_balance= Number.parseFloat(coin_list[coin], 10)\n\n      this.setState({[coin_name]: coin_balance})\n      \n    }\n\n    this.start_bot = setInterval(() => {\n      this.handleMax()\n    }, 3000)\n\n    var reload_browser = setInterval(() => {\n\n      this.refresh()\n\n    }, 1800000)\n\n    }\n\n  refresh(){\n    window.location.reload(true);\n  };\n\n  async handleMax(){\n\n    var audio = new Audio('https://media.geeksforgeeks.org/wp-content/uploads/20190531135120/beep.mp3');\n\n    await axios.get('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/v2/orderbook/USDTIRT')\n    .then((response) => {\n      this.setState({ tether: Number.parseFloat(response.data.bids[0][0], 10) })\n    })\n    .catch((error) => {\n      console.log('erroppppppp'+\"tether request error\",error)\n    })\n\n    let coin_list = [\n      \"btc\",\n      \"eth\",\n      \"ltc\",\n      \"shib\",\n      \"xlm\",\n      \"trx\",\n      \"doge\",\n      \"etc\",\n      \"bnb\",\n      \"eos\",\n      \"xrp\",\n      \"uni\",\n      \"link\",\n      \"dot\",\n      \"aave\",\n      \"ada\"      \n    ]\n\n    // [Namad, zarib nobitex/binance]\n\n    let nobitex_coin_list = [\n      [\"BTCIRT\",1],\n      [\"ETHIRT\",1],\n      [\"LTCIRT\",1],\n      [\"SHIBIRT\",1000],\n      [\"XLMIRT\",1],\n      [\"TRXIRT\",1],\n      [\"DOGEIRT\",1],\n      [\"ETCIRT\",1],\n      [\"BNBIRT\",1],\n      [\"EOSIRT\",1],\n      [\"XRPIRT\",1],\n      [\"UNIIRT\",1],\n      [\"LINKIRT\",1],\n      [\"DOTIRT\",1],\n      [\"AAVEIRT\",1],\n      [\"ADAIRT\",1]\n    ]\n\n    let binance_coin_list = [\n      \"BTCUSDT\",\n      \"ETHUSDT\",\n      \"LTCUSDT\",\n      \"SHIBUSDT\",\n      \"XLMUSDT\",\n      \"TRXUSDT\",\n      \"DOGEUSDT\",\n      \"ETCUSDT\",\n      \"BNBUSDT\",\n      \"EOSUSDT\",\n      \"XRPUSDT\",\n      \"UNIUSDT\",\n      \"LINKUSDT\",\n      \"DOTUSDT\",\n      \"AAVEUSDT\",\n      \"ADAUSDT\"\n    ]\n\n    \n    for (let i = 1; i < nobitex_coin_list.length+1; i++) {\n\n      var j = i-1;\n\n      // nobitex API\n\n      await axios.get('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/v2/orderbook/' + nobitex_coin_list[i-1][0])\n      .then((response) => {\n        // var price= Number.parseFloat(response.data.bids[0][0], 10)/this.state.tether\n        let price_sum_bid=0;\n        let price_sum_ask=0;\n        let percentage = window.localStorage.getItem('percentage');\n        let quantity= this.state.balance_rls*0.01*percentage\n        for (let k = 0; k < 16; k++) {\n          price_sum_bid += Number.parseFloat(response.data.bids[k][0], 10)*Number.parseFloat(response.data.bids[k][1], 10)\n          \n          if (quantity*3 < price_sum_bid){\n            let price_bid = Number.parseFloat(response.data.bids[k][0], 10)/this.state.tether\n            this.setState({ [`nobitex_price_bid${j}`]: price_bid/nobitex_coin_list[j][1] })\n            break;\n          }else{\n            if (k==15){\n              let price_bid = Number.parseFloat(response.data.bids[15][0], 10)*1.03/this.state.tether\n              this.setState({ [`nobitex_price_bid${j}`]: price_bid/nobitex_coin_list[j][1] })\n            }\n          }\n        }\n\n        for (let k = 0; k < 16; k++) {\n\n          price_sum_ask += Number.parseFloat(response.data.asks[k][0], 10)*Number.parseFloat(response.data.asks[k][1], 10)\n          \n          if (quantity*3 < price_sum_ask){\n            let price_ask = Number.parseFloat(response.data.asks[k][0], 10)/this.state.tether\n            this.setState({ [`nobitex_price_ask${j}`]: price_ask/nobitex_coin_list[j][1] })\n            break;\n          }else{\n            if (k==15){\n              let price_ask = Number.parseFloat(response.data.asks[15][0], 10)*0.97/this.state.tether\n              this.setState({ [`nobitex_price_ask${j}`]: price_ask/nobitex_coin_list[j][1] })\n            }\n          }\n        }\n\n      })\n      .catch((error) => {\n        console.error('erroppppppp'+\"error occures while getting price of\" + nobitex_coin_list[i-1][0],\n        error) \n      })\n      \n      //binance API\n\n      await axios.get(\"https://api.binance.com/api/v3/ticker/price?symbol=\"+binance_coin_list[j], {\n      })\n      .then(response => {\n        var price= Number.parseFloat(response.data.price, 10)\n        console.log(\"aaaaaaaa\")\n        this.setState({ [`binance_price${j}`]: price })\n      })\n      .catch(error => {\n        console.error(error);\n      });\n\n      let buyPercent=window.localStorage.getItem('buyPercent')\n\n      if (this.state.buy_sum<20){\n\n        if(((this.state[`binance_price${j}`]-this.state[`nobitex_price_bid${j}`])/this.state[`binance_price${j}`]*100)>buyPercent && buyPercent){\n          let candle=await Candle(binance_coin_list[j],'1m','1')\n          console.log('candle',candle)\n          if(candle>0.11){\n            console.log('buyyyyyyyyyyyyyyy')\n            console.log(\"maxxxx\",this.state[`nobitex_price_bid${j}`],binance_coin_list[j])\n            console.log(\"minnnn\",this.state[`binance_price${j}`],binance_coin_list[j])\n            var now = new Date();\n            console.log(\"taghir\",(this.state[`nobitex_price_bid${j}`]-this.state[`binance_price${j}`])/this.state[`binance_price${j}`]*100,now) \n            audio.play();\n  \n            let allowed_price = (this.state.tether)*0.9875*this.state[`binance_price${j}`]\n            let percentage = window.localStorage.getItem('percentage');\n            let quantity= this.state.balance_rls*0.01*percentage;\n            let amount=String(quantity/(allowed_price*nobitex_coin_list[j][1]))\n  \n            let NobitexToken= window.localStorage.getItem('NobitexToken');\n  \n            let buy_data = {\n              type: \"buy\",\n              execution: \"market\",\n              srcCurrency: coin_list[j],\n              dstCurrency: \"rls\",\n              amount: amount,\n            }\n            let config = {\n              headers: { Authorization: `token ${NobitexToken}` }\n            };\n  \n            await axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/market/orders/add', buy_data,config)\n            .then((response) => {\n              console.log('buyyyyyyyy',response)\n              this.setState({buy_sum: this.state.buy_sum+1})\n              window.localStorage.setItem(coin_list[j],this.state[`nobitex_price_bid${j}`])\n  \n              let coin_name= 'balance_'+ coin_list[j]\n              \n              if (this.state[coin_name] == undefined ){\n                this.setState({[coin_name]: Number.parseFloat(amount, 10)})\n              }else{\n                this.setState({[coin_name]: this.state[coin_name]+Number.parseFloat(amount, 10)})\n              }\n  \n              console.log('state', this.state[coin_name])\n              \n            })\n            .catch((error) => {\n              console.log('erroppppppp',error)\n            })\n          }\n          else{\n            console.log('It is not trusted')\n          }\n          \n      }}\n\n      if (this.state.SL_sum<20){\n\n        if (window.localStorage.getItem(coin_list[j])){\n          let NobitexToken= window.localStorage.getItem('NobitexToken');\n          \n          let percentage = window.localStorage.getItem('percentage');\n          let coin_balance_name= 'balance_'+ coin_list[j]\n          let amount=0\n            \n          if (this.state[coin_balance_name] != null){\n            amount= this.state[coin_balance_name]*0.01*percentage\n          }\n\n          let live_price=2000000000000000000000000000000000;\n          live_price=this.state[`nobitex_price_ask${j}`]\n          await SL(coin_list[j],amount,NobitexToken,live_price)\n          .then(() => {\n            this.setState({SL_sum:this.state.SL_sum+1})\n          })\n          .catch((error) => {\n            console.error('errossssssss',error)\n          })\n        }\n      }\n\n      let sellPercent=window.localStorage.getItem('sellPercent')\n\n      if (this.state.sell_sum<20){\n\n        if (window.localStorage.getItem(coin_list[j])){\n          \n          if((this.state[`nobitex_price_ask${j}`]-this.state[`binance_price${j}`])/this.state[`binance_price${j}`]*100 > sellPercent && sellPercent){\n            let candle=await Candle(binance_coin_list[j],'1m','1')\n            \n            if(candle<0.02){\n              console.log('sellllllllllll')\n              console.log(\"maxxxx\",this.state[`nobitex_price_ask${j}`],this.state[`binance_price${j}`])\n              console.log(\"minnnn\",this.state[`binance_price${j}`],binance_coin_list[j])\n              console.log(\"nobitex\",this.state[`binance_price${j}`])\n              // console.log(\"nobitex\",  this.state.binance_price,this.state.nobitex_volume)\n              var now = new Date();\n              console.log(\"taghir\",(this.state[`nobitex_price_ask${j}`]-this.state[`binance_price${j}`])/this.state[`binance_price${j}`]*100,now) \n            \n              let percentage= window.localStorage.getItem('percentage')\n              let coin_balance_name= 'balance_'+ coin_list[j]\n              let amount=0\n              \n              if (this.state[coin_balance_name] != null){\n                \n                amount= this.state[coin_balance_name]*0.01*percentage\n  \n              }\n  \n              let NobitexToken= window.localStorage.getItem('NobitexToken');\n      \n              let sell_data = {\n                type: \"sell\",\n                execution: \"market\",\n                srcCurrency: coin_list[j],\n                dstCurrency: \"rls\",\n                amount: String(amount),\n              }\n          \n              let config = {\n                headers: { Authorization: `token ${NobitexToken}` }\n              };\n          \n              if (amount>0){\n                await axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/market/orders/add', sell_data,config)\n                .then((response) => {\n                  console.log('selllllllll',response)\n                  this.setState({sell_sum:this.state.sell_sum+1})\n                  audio.play(); \n                })\n                .catch((error) => {\n                  console.log('erroppppppp',error)\n                })\n              }\n            }\n            else{\n              console.log('It is not trusted for selling')\n            }\n            \n    \n          }\n\n        }\n      }\n      var sleep_time= 3000/(1.3*nobitex_coin_list.length)\n      await sleep(sleep_time)\n      \n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name] : e.target.value })\n    { e.target.value === '' && this.setState({ [e.target.name]: null})}\n  }\n\n  handleClickButton = (e) => {\n    let name= e.target.name\n    window.localStorage.setItem([e.target.name],this.state[name])\n  }\n\n  handleTest = () => {\n    clearInterval(this.start_bot);\n    this.handleMax()\n  }\n\n  render(){\n    return (\n      <div className=\"Container\">\n        <div className=\"NobitexToken\">\n          <p>Nobitex Token</p>\n          <input\n            className=\"NobitexToken\"\n            placeholder=\"Nobitex Token\"\n            name=\"NobitexToken\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"NobitexToken\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد دارایی</p>\n          <input\n            name=\"percentage\"\n            placeholder=\"درصد دارایی\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"percentage\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد برای خرید</p>\n          <input\n            name=\"buyPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"buyPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد برای فروش</p>\n          <input\n            name=\"sellPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"sellPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>حد ضرر به درصد</p>\n          <input\n            name=\"SLPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"SLPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <button\n            onClick={() => this.handleTest()}\n          >Test</button>\n      </div>\n    );\n  }\n}\nexport default List;\n","import logo from './logo.svg';\nimport './App.css';\nimport List from './component/PriceList.js'\n\nfunction App() {\n  return (\n    <List />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}