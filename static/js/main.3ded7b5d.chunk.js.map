{"version":3,"sources":["logo.svg","component/PriceList.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","handleChange","e","setState","target","name","value","handleClickButton","window","localStorage","setItem","state","handleTest","clearInterval","start_bot","handleMax","buy_sum","sell_sum","SL_sum","a","token","getItem","coin_list","config","headers","Authorization","coins_data","currencies","axios","post","then","response","data","wallets","forEach","coin","rialBalance","currency","balance","catch","error","console","coin_name","coin_balance","Number","parseFloat","this","setInterval","refresh","location","reload","quantity","buyPercent","buy_data","log","sellPercent","sell_data","className","placeholder","onChange","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ded7b5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport '../App.css';\nimport axios from 'axios'\nimport {sleep} from '../functions/commonfunctions'\nimport {SL,Candle} from '../functions/strategies'\nimport {Balance} from '../functions/Balance'\n\nclass List extends React.Component {\n  constructor(props){\n    super(props)\n    this.state={\n      buy_sum: 0,\n      sell_sum: 0,\n      SL_sum: 0\n    }\n  }\n\n  async componentDidMount () {\n    \n    let token=window.localStorage.getItem('NobitexToken')\n    var coin_list={}\n\n    let config = {\n      headers: { Authorization: `token ${token}` }\n    };\n    \n    let coins_data = {\n      currencies:\"rls,btc,shib,ltc,eth,xlm,trx,doge,etc,bnb,eos,xrp,uni,link,dot,aave,ada\"\n    }\n\n    await axios.post('https://corsproxyy.herokuapp.com/https://api.nobitex.ir/users/wallets/list', coins_data, config)\n    .then((response) => {\n      \n      var coins= response.data.wallets\n      coins.forEach(function (coin) {\n              \n        if ( coin.rialBalance > 100000 ){\n          let currency= coin.currency\n          let balance= coin.balance\n          coin_list[currency]= balance\n        }\n      });\n      \n    })\n    .catch((error) => {\n      console.error('erroppppppp',error)\n    })\n    \n    for (var coin in coin_list){\n      let coin_name= 'balance_'+ coin\n      let coin_balance= Number.parseFloat(coin_list[coin], 10)\n\n      this.setState({[coin_name]: coin_balance})\n      \n    }\n\n    this.start_bot = setInterval(() => {\n      this.handleMax()\n    }, 3000)\n\n    var reload_browser = setInterval(() => {\n\n      this.refresh()\n\n    }, 1800000)\n\n    }\n\n  refresh(){\n    window.location.reload(true);\n  };\n\n  async handleMax(){\n\n\n    let quantity= window.localStorage.getItem('quantity');\n    let token= window.localStorage.getItem('NobitexToken');\n    let buyPercent=window.localStorage.getItem('buyPercent')\n\n    let buy_data={\n      quantity: quantity,\n      token: token,\n      buyPercent: buyPercent\n    }\n\n    await axios.post('https://hellofast.herokuapp.com/buy/', buy_data)\n    .then((response) => {\n      console.log('buyyyyyyyy',response)\n    })\n    .catch((error) => {\n      console.log('erroppppppp',error)\n    })\n    \n\n    let sellPercent=window.localStorage.getItem('sellPercent')\n\n    let sell_data={\n      quantity: quantity,\n      token: token,\n      sellPercent: sellPercent\n    }\n\n    await axios.post('https://hellofast.herokuapp.com/sell/', sell_data)\n    .then((response) => {\n      console.log('sellllllll',response)\n    })\n    .catch((error) => {\n      console.log('erroppppppp',error)\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name] : e.target.value })\n    { e.target.value === '' && this.setState({ [e.target.name]: null})}\n  }\n\n  handleClickButton = (e) => {\n    let name= e.target.name\n    window.localStorage.setItem([e.target.name],this.state[name])\n  }\n\n  handleTest = () => {\n    clearInterval(this.start_bot);\n    this.handleMax()\n  }\n\n  render(){\n    return (\n      <div className=\"Container\">\n        <div className=\"NobitexToken\">\n          <p>Nobitex Token</p>\n          <input\n            className=\"NobitexToken\"\n            placeholder=\"Nobitex Token\"\n            name=\"NobitexToken\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"NobitexToken\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد دارایی</p>\n          <input\n            name=\"percentage\"\n            placeholder=\"درصد دارایی\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"percentage\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد برای خرید</p>\n          <input\n            name=\"buyPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"buyPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>درصد برای فروش</p>\n          <input\n            name=\"sellPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"sellPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <div>\n          <p>حد ضرر به درصد</p>\n          <input\n            name=\"SLPercent\"\n            onChange={(e) => this.handleChange(e)}\n          />\n          <button\n            name=\"SLPercent\"\n            onClick={(e) => this.handleClickButton(e)}\n          >send</button>\n        </div>\n\n        <button\n            onClick={() => this.handleTest()}\n          >Test</button>\n      </div>\n    );\n  }\n}\nexport default List;\n","import logo from './logo.svg';\nimport './App.css';\nimport List from './component/PriceList.js'\n\nfunction App() {\n  return (\n    <List />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}